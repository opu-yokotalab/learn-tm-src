<?xml version="1.0" encoding="UTF-8" ?>
<xtdl>
<section id="sec1" title="確認テスト：配列によるスタックの実装">
<explanation id="sec1.1" title="問題">
	<p>配列を用いたスタック操作関数群を作成する．各操作関数のプロトタイプは下記のとおりである．</p>
<pre class="prettyprint">struct array_stack *makeNullStack(void);
int emptyStack(struct array_stack*);
int topStack(struct array_stack*);
int popStack(struct array_stack*);
void pushStack(int, struct array_stack*);
void deleteStack(struct array_stack*);
</pre>
<p>また，構造体 struct array_stack は下記を用いる．</p>
<pre class="prettyprint">
#define MAX_STACK_SIZE 10
struct array_stack {
  int length; /* スタックの長さ(格納数) */
  int elements[MAX_STACK_SIZE]; /* データを格納するための配列*/
};</pre>
<p>
スタックに格納するデータはint型に限定する．また，格納位置が0のものをスタックの底とする．なお，MAX_STACK_SIZEを越えてデータを格納しようとした場合にはエラーメッセージを出し，その操作を無効とすること．<br /><br />
上記に示した関数群のうち，EmptyStack,PopStackを実際に実装した．各問の箇所に当てはまるプログラムを選択せよ．</p>

<pre class="prettyprint">/* check stack */
int EmptyStack(struct array_stack *pcStack)
{
  int n=0;

  if([ A ]){
    if([ B ])
      n=1;
  }

  return n;
}
/* Pop data of the top stack. */
int PopStack(struct array_stack *pcStack)
{
  int n;

  [ C ]
  if(n==-1){
    [ D ]
  }
  [ E ]
  [ F ]

  return n;
}</pre>
</explanation>

	<examination title="解答欄" id="stack_exam" ordering="_random">
		<group id="stack" mark="100">
        <item id="stack_0" type="random">
            <selection_correct>false</selection_correct>
            <passing_grade>1.0</passing_grade>
        </item>
        <item id="stack_1" type="random">
            <selection_correct>false</selection_correct>
            <passing_grade>1.0</passing_grade>
        </item>
        <item id="stack_2" type="random">
            <selection_correct>false</selection_correct>
            <passing_grade>1.0</passing_grade>
        </item>
		</group>
	</examination>
</section>
</xtdl>