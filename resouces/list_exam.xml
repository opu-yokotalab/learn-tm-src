<?xml version="1.0" encoding="UTF-8" ?>
<xtdl>
<section id="sec1" title="練習問題テスト：ポインタ参照の構造体">

	<examination title="解答欄" id="list_exam1" ordering="_random">
		<group id="list1" mark="100">
        <item id="list1_0" type="0">
            <selection_correct>false</selection_correct>
            <passing_grade>1.0</passing_grade>
        </item>
        <item id="list1_1" type="1">
            <selection_correct>false</selection_correct>
            <passing_grade>1.0</passing_grade>
        </item>
		</group>
	</examination>

</section>



<section id="sec2" title="確認テスト：連結リストの実装">
<explanation id="sec2.1" title="問題">
	<p>前節の演習課題であるリストの操作関数のうち，下記に示したものを実際に実装した．各問の箇所に当てはまるプログラムを選択せよ．</p>

<pre class="prettyprint">/*
 * Return pointer to the previous cell.
 */
struct cell *PreviousCell(struct cell *pcCell,struct cell *pcList)
{
  struct cell *pcPrevious=(struct cell*)NULL;
  struct cell *pcNext;

  if(FirstCell(pcList)!=(struct cell*)NULL){
	/* セルが空のときはダミーのポインタを返す */
	if((pcNext=FirstCell(pcList))==pcCell)
	  return pcList;
	do{
      pcPrevious=pcNext;
    /* 指定したセルに行き当たるまで繰り返す */
      }while((pcNext=NextCell(pcNext,pcList))!=pcCell);
  }

  return pcPrevious;
}
/*
 * Insert new cell to the list.
 */
struct cell *InsertCell(int data, struct cell *pcCell, struct cell *pcList)
{
  struct cell *pcInsert;
  struct cell *pcPrevious;

/* 新規セルのアドレスを動的に確保 */
  pcInsert=(struct cell*)malloc(sizeof(struct cell));
  
  pcInsert->data=data;
  pcInsert->pcNext=(struct cell*)NULL;


  if(pcCell != (struct cell*)NULL){
/* 指定したセルの次にセルがあったときの処理 */
    pcInsert->pcNext=pcCell;
    pcPrevious=PreviousCell(pcCell,pcList);
    pcPrevious->pcNext=pcInsert;
  }else{
/* 指定したセルの次がNULLのときの処理 */
	EndCell(pcList)->pcNext=pcInsert;
  }
  
  return pcInsert;
}
/*
 * Delete the cell from the list.
 */
struct cell *DeleteCell(struct cell *pcCell,struct cell *pcList)
{
	struct cell *pcNext;
	struct cell *pcPrevious;
	
/* 指定したセルの前のポインタと後のポインタを取得 */
	pcNext=NextCell(pcCell,pcList);
	pcPrevious=PreviousCell(pcCell,pcList);
	
/* 1つ以上セルが存在するとき(ダミーは除く)の処理 */
	if(pcPrevious != (struct cell*)NULL)
		pcPrevious->pcNext=pcNext;
/* メモリの解放 */
	free(pcCell);
	
	return pcNext;
}
</pre>
</explanation>

	<examination title="解答欄" id="list_exam2" ordering="_random">
		<group id="list2" mark="100">
        <item id="list2_0" type="random">
            <selection_correct>false</selection_correct>
            <passing_grade>1.0</passing_grade>
        </item>
        <item id="list2_1" type="random">
            <selection_correct>false</selection_correct>
            <passing_grade>1.0</passing_grade>
        </item>
        <item id="list2_2" type="random">
            <selection_correct>false</selection_correct>
            <passing_grade>1.0</passing_grade>
        </item>
        <item id="list2_3" type="random">
            <selection_correct>false</selection_correct>
            <passing_grade>1.0</passing_grade>
        </item>
		</group>
	</examination>
</section>
</xtdl>